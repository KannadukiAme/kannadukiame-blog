---
import { format } from 'date-fns'
import siteConfig from '@utils/config'
import Layout from '@layouts/Layout.astro'
import PostItem from '@components/PostItem.astro'
import { CollectionEntry, getCollection } from 'astro:content'

export async function getStaticPaths() {
  const blogEntries = await getCollection(
    'blog',
    (blog) => import.meta.env.DEV || !blog.data.draft
  )

  const blogEntriesSortByDate = blogEntries.sort((a, b) => {
    return b.data.pubDate.getTime() - a.data.pubDate.getTime()
  })

  const tags = [
    ...new Set(blogEntriesSortByDate.map((blog) => blog.data.tags).flat()),
  ]

  return tags.map((tag) => {
    const posts = blogEntriesSortByDate.filter((post) => {
      return post.data.tags.includes(tag)
    })

    return {
      params: {
        tag,
      },
      props: { posts },
    }
  })
}

interface Props {
  posts: CollectionEntry<'blog'>[]
}

const { tag } = Astro.params
const { posts } = Astro.props
const numOfPosts = posts.length
---

<Layout title={`${tag} | ${siteConfig.title}`}>
  <div class="flex w-full dark:text-gray-50">
    <div class="container mx-auto mt-8 mb-[80px]">
      <div class="text-2xl mb-2">
        <i class="fa-solid fa-hashtag"></i>
        <span>{tag} ({numOfPosts})</span>
      </div>
      <div
        class="grid gap-x-0 gap-y-4 lg:grid-cols-2 lg:grid-rows-2 xl:grid-cols-3"
      >
        {
          posts.map((post) => (
            <PostItem
              title={post.data.title}
              pubDate={format(new Date(post.data.pubDate), 'MMM dd, yyyy')}
              heroImage={post.data.heroImage}
              tags={post.data.tags}
              slug={post.slug}
            />
          ))
        }
      </div>
    </div>
  </div>
</Layout>
