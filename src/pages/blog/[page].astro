---
import Layout from '@layouts/Layout.astro'
import PostCard from '@components/PostCard.astro'
import Pagination from '@components/Pagination.astro'
import { type CollectionEntry, getCollection } from 'astro:content'
import { format } from 'date-fns'
import siteConfig from '@utils/config'
import type { Page, PaginateFunction } from 'astro'

type Params = {
  paginate: PaginateFunction
}

export async function getStaticPaths({ paginate }: Params) {
  const blogEntries = await getCollection('posts')

  const allBlogData = blogEntries.sort((a, b) => {
    return b.data.pubDate.getTime() - a.data.pubDate.getTime()
  })

  return paginate(allBlogData, { pageSize: siteConfig.pageSize })
}

interface Props {
  page: Page<CollectionEntry<'posts'>>
}

const { page } = Astro.props
---

<Layout title={`BLOG | ${siteConfig.title}`}>
  <div class="flex">
    <div class="mx-auto max-w-screen-md mt-8 mb-32">
      <Pagination currentPage={page.currentPage} lastPage={page.lastPage} />
      <div class="grid gap-y-4 mx-2 grid-cols-1 mt-4">
        {
          page.data.map(({ data, slug }) => (
            <PostCard
              title={data.title}
              description={data.description}
              pubDate={format(data.pubDate, 'yyyy . MM . dd')}
              heroImage={data.heroImage}
              tags={data.tags}
              slug={slug}
            />
          ))
        }
      </div>
    </div>
  </div>
</Layout>
